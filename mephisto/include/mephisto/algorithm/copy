#ifndef MEPHISTO_COPY
#define MEPHISTO_COPY

#include <mephisto/type_traits>
#include <alpaka/alpaka.hpp>
#include <mephisto/array>
#include <iostream>

namespace mephisto {

/**
 * Copy the elements and metadata from the host buffer to an entity memory
 *
 * TODO: evaluate how well this could be implemented with STL-like code
 */
template <typename Stream, typename Buffer, typename Entity>
auto put(Stream &&stream, Buffer &buf, Entity &entity)
{
  alpaka::vec::Vec<alpaka::dim::DimInt<1u>, size_t> const extent =
      buf.datasize();
  auto meta    = buf.meta();
  auto data    = buf.data();
  auto bufsize = buf.bufsize();

  auto entity_buf = buf.alloc_entity_buf(entity);

  // Copy metadata to the beginning of the buffer on the device
  alpaka::mem::view::copy(stream, entity_buf.meta(), meta, 1);
  // Copy the actual elements
  alpaka::mem::view::copy(stream, entity_buf.data(), data, buf.datasize());
  return entity_buf;
};

template <typename Stream, typename EntityBuf, typename HostBuf>
void get(Stream &stream, EntityBuf &entity_buf, HostBuf &host_buf)
{
  // TODO: implement
};

}  // namespace mephisto

#endif
